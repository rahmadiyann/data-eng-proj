version: '3.8'

x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: Dockerfile.airflow
  env_file:
    - airflow.env
  volumes:
    - ./data:/opt/spark/data
    - ./spark_apps:/opt/spark/apps
    - ./dags:/opt/airflow/dags
  environment:
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CONN_SPARK_DEFAULT=spark://spark-master:7077
    - AIRFLOW__CONN_POSTGRES_FINANCE_DB=postgresql://postgres:rahmadiyan@finance-raw.cp22uk6owxbs.us-west-2.rds.amazonaws.com:5432/postgres
    - AIRFLOW__CONN_POSTGRES_MOTORCYCLE_DB=postgresql://postgres:rahmadiyan@mmotorcycle.cp22uk6owxbs.us-west-2.rds.amazonaws.com:5432/postgres
  depends_on:
    - postgres

services:
  postgres:
    image: postgres:14.0
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  webserver:
    <<: *airflow-common
    command: webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor  # Ensure the executor is set
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor  # Optional: If using Celery
    ports:
      - "8080:8080"
    depends_on:
      - scheduler

  scheduler:
    <<: *airflow-common
    command: scheduler

  spark-master:
    container_name: da-spark-master
    build: Dockerfile.spark
    image: da-spark-image
    entrypoint: ['./entrypoint.sh', 'master']
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    env_file:
      - .env.spark
    ports:
      - '9090:8080'
      - '7077:7077'


  spark-history-server:
    container_name: da-spark-history
    image: da-spark-image
    entrypoint: ['./entrypoint.sh', 'history']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'

  spark-worker:
    container_name: da-spark-worker
    image: da-spark-image
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    ports:
      - "8081:8081"
    environment:
      - PYSPARK_PYTHON=/usr/local/bin/python

volumes:
  spark-logs:
  postgres_data: